@model E_RecrutementProject.Models.Offre

@{
    ViewBag.Title = "Create";
}


<h2>Espace Recruteur : Gérer vos Offres</h2>
<br />



<div style=" display: flex; flex-wrap: wrap;">
    <div style="flex: 0 0 calc(20% - 10px); margin: 5px;">
        @using (Html.BeginForm("Index", "Offres", FormMethod.Get))
        {
            <!-- Ajoutez ici les champs du formulaire si nécessaire -->

            <button type="submit" style="background-color: burlywood; color: blue;">Mon Espace</button>
        }
    </div>

    <div style="flex: 0 0 calc(20% - 10px); margin: 5px;">
        @using (Html.BeginForm("Create", "Offres", FormMethod.Get))
        {
            <!-- Ajoutez ici les champs du formulaire si nécessaire -->

            <button type="submit" style="background-color: green; color: blanchedalmond;">Créer Offre</button>
        }
    </div>
    <div style="flex: 0 0 calc(20% - 10px); margin: 5px;">
        @using (Html.BeginForm("Statistiques", "Offres", FormMethod.Get))
        {
            <!-- Ajoutez ici les champs du formulaire si nécessaire -->

            <button type="submit" style="background-color: green; color: blanchedalmond;">Statistiques</button>
        }
    </div>

    <div style="flex: 0 0 calc(20% - 10px); margin: 5px;">

        @using (Html.BeginForm("EspaceEntretiens", "Offres", FormMethod.Get))
        {
            <!-- Ajoutez ici les champs du formulaire si nécessaire -->

            <button type="submit" style="background-color: green; color: blanchedalmond;">Espace Entretiens</button>
        }
    </div>

    <div style="flex: 0 0 calc(20% - 10px); margin: 5px; ">
        @using (Html.BeginForm("SupprimerTous", "Offres", FormMethod.Get))
        {
            <!-- Ajoutez ici les champs du formulaire si nécessaire -->

            <button type="submit" style="background-color: red; color: blanchedalmond;"> Supprimer Tous </button>
        }
    </div>

</div>

<hr />

<h5>Creer une nouvelle Offre </h5>
<br />
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdRecruteur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdRecruteur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdRecruteur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeContrat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TypeContrat, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeContrat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Secteur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Secteur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Secteur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Profil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poste, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Poste, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Poste, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remuneration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remuneration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remuneration, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Créer" class="btn btn-default" style="background-color:greenyellow" />
            </div>
        </div>
    </div>
}

<br />
<hr />

<div style="margin-left:45%;">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
